{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropType","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,aA0BhCZ,EAAYe,UAAY,CACpBd,cAAee,IAASC,KAAKC,Y,YCjC1B,SAASC,EAAT,GAAyC,EAAlBC,GAAmB,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAErC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,U,2BCPCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,gEAGIG,MAAOR,GAHX,cAGbS,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0BzB,mBAAS,CAC/B+B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPjB,EAASC,GACJiB,MAAM,SAAAC,GAEHC,QAAQC,IAAKF,GAEbH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAKtB,CAACb,IAEGc,EDpB0BO,CAAcrB,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAoDI,IAElDa,GAAW,mBAAIjB,UAAU,mCAAd,wBAEb,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAACjB,EAAD,eAESiB,GADCA,EAAIhB,aEdzB6B,EAAe,WAExB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQiD,EAAWf,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnBlCwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.af4e3c66.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropType from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit } >\n\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n\n        </form>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories: PropType.func.isRequired\n}\n","import React from 'react'\n\nexport function GifGridItem( {id, title, url} ) {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }}&limit=10&api_key=Te1sBzRRwPQ3CHP44Y1EFLr4k9AePfOI`;\n    const response = await fetch( url );\n    const { data } = await response.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs\n}\n","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p  className=\"animate__animated animate__flash\">Loading...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (  \n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [], \n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                console.log( imgs );\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n                        \n            })\n\n    }, [category])\n\n    return state; // { data:[], loading: true };\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () =>{\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // setCategories( ['Death Note', ...categories] );\n    //     setCategories( cats => [...cats, 'DeathNote'] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n            {/* <button onClick={ handleAdd } >ADD</button> */}\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid\n                            key={ category } \n                            category={ category } \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}